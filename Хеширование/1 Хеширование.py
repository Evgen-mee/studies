# Хеш-функция — функция, осуществляющая преобразование набора входных данных произвольного размера
# в последовательность фиксированного размера, выполняемое определённым алгоритмом.
#
# Преобразование, производимое хеш-функцией, называется хешированием,
# а результат преобразования называется хешем, хеш-значением или хеш-кодом.

# - Принцип работы хеширования
# beegeek после преобразования хеш-функцией будет выглядеть:
# d7dd6be4b4a8a123f201ecbcacaf5883f1cec5e0
#
# Если незначительно изменить входные данные, записав вместо b -> B, то хеш-значение примет вид:
# 4f27087e433ab69ec25abfee3eb192980c0887eb
#
# небольшие изменения во входных данных приводят к большим изменениям в хеш-значениях
# Такой эффект называется лавинообразным эффектом
#
# SHA-1 всегда возвращает строку из 40 цифр и/или строчных латинских символов,
# независимо от объема входных данных: это может быть как строка из 7 символов, так и из 7000


# - Коллизия хеш-функции
# Коллизией хеш-функции называется ситуация,
# когда у двух разных наборов входных данных совпадают хеш-значения
#
# Коллизии существуют для большинства хеш-функций,
# но для хороших хеш-функций частота их возникновения сведена к минимуму.


#  - Детерминированность
# детерминированность, при одинаковых входных данных функция возвращает одинаковый результат.
# Из этого следуют два следующих утверждения:
#  - если мы имеем два равных набора данных, то хеш-значения этих наборов тоже будут равны
#  - если мы имеем два набора данных, хеш-значения которых не равны, то и сами наборы тоже будут не равны
#
# из равенства хеш-значений двух наборов данных мы не можем однозначно заключить, что эти наборы тоже равны,
# поскольку любая хеш-функция, работающая с произвольным количеством данных, может иметь коллизии.


# - Области применения хеширования

#  - Проверка целостности данных
# Для проверок целостности данных зачастую используются простые хеш-функции.
# Например, один пользователь передает другому определенный набор данных, а затем хеш от него.
# Получатель информации, захешировав полученную информацию у себя и сравнив хеши, может удостовериться,
# что он получил именно те данные, которые были отправлены.
#
# Хеш-значение, используемое для проверки целостности данных
# при их передаче или хранении, называется контрольной суммой.

#  - Работа с большими объемами информации
# Хеш-функция может облегчить работу с большими объемами информации.
# Например, в текст, состоящий из нескольких миллионов различных строк нужно добавить еще одну,
# при условии, что там ее еще нет
# Чтобы не заниматься посимвольным сравнением каждой строки, можно предварительно вычислить хеш каждой из них,
# и уже сделать сравнение по нему. Вся работа упрощается и ускоряется в разы.

# - Хранение паролей
# В целях безопасности онлайн-сервисы не хранят пароли в явном виде, они хранят их хеш-значения
#
# Когда мы пытаемся выполнить вход в свою учетную запись и вводим пароль, происходит сравнение
# хеш-значения введенного пароля и хеш-значения фактического пароля, хранящегося в базе данных онлайн-сервиса



