# Магические методы __setattr__, __getattribute__, __getattr__ и __delattr__

class Point:
    MAX_CORD = 100
    MIN_COORD = 0

    def __init__(self,x,y):
        self.x = x
        self.y = y

    def set_coord(self,x,y):
        self.x = x
        self.y = y

    # При обращении к атрибуту через экземпляр класса
    # Срабатывает данный метод
    # и возвращает значение соответствующего атрибута
    # без return возвращает None
    # можем управлять обращением к тому или иному атрибуту
    def __getattribute__(self, item):
        if item == "x": # при обращении к атрибуту (Вне класса) X сработает исключение
            raise ValueError("Доступ запрещен")
        else:
            return object.__getattribute__(self,item) # обратились к самому главному обьекту в paiton object


    # срабатывает каждый раз когда идет присвоение атрибуту
    # можем запретить создавать какой либо атрибут экземпляра класса
    def __setattr__(self, key, value):
        if key == "z": # запретили создавать атрибут с именем "z"
            raise AttributeError("Недопустимое имя атрибута")
        else:
            object.__setattr__(self, key, value)
            # если хотим явно присвоить значение
            # то используем
            # self.__dict__[key] = value


    # вызывается каждый раз при обращении к несуществующему атрибуту экземпляра класса
    # может возвращать False при обращении к несуществующему атрибуту экземпляра класса
    # при return False просто вернется False а не вылетит ошибка
    def __getattr__(self, item):
        return False


    # вызывается при удалении атрибута экземпляра класса (не важно существует но или нет)
    # можем контролировать удаление атрибутов экземляра класса
    def __delattr__(self, item):
        object.__delattr__(self, item)


# метод def __setattr__(self,key, value)
# автоматически вызывается при изменении свойства key класса
# можем запретить создавать какой либо атрибут экземпляра класса

# метод def __getattribute__(self,item)
# автоматически вызывается при получении свойства класса с именем item
# можем управлять обращением к тому или иному атрибуту

# метод def __getattr__(self, item)
# автоматически вызывается при получении НЕСУЩЕСТВУЮЩЕГО свойства item КДАССА

# метод def __delattr__(self,item)
# автоматически вызывается при удалении  свойства item (не важно существует оно или нет)





