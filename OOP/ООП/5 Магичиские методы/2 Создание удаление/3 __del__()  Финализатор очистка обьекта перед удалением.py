# при уничтожении объекта необходимо освобождать не только память.

# Мы должны освободить или закрыть другие ресурсы, которые использовались объектом

# Его вызов происходит в том случае, когда счетчик ссылок на объект становится равным нулю.

# ОПЕРАТОР del не уничтожает объект, а удаляет связь между именем и объектом


# на созданный объект ссылается лишь имя obj, и после его удаления вызывается финализатор,
# так как счетчик ссылок на созданный объект становится равным нулю.
# class MyClass:
#     def __del__(self):        # финализатор
#         print('Bye')
#
#
# obj = MyClass()
#
# del obj   # Выводит  'Bye'


# ничего не выводит, так как счетчик ссылок на объект равен единице, а не нулю.
# Таким образом, финализатор не запускается при удалении какой-либо одной ссылки на объект.
# Он вызывается только тогда, когда все ссылки на объект удалены.
# class MyClass:
#     def __del__(self):
#         print('Bye')
#
#
# obj1 = MyClass()     # первая ссылка на обьект
# obj2 = obj1          # вторая ссылка на обьект
#
# del obj1             # удалили только ссылку obj1, сам обьект существует т.к. на него ссылается obj2