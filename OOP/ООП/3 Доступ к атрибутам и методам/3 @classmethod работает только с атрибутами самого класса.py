# имеют обязательный параметр cls который указывает на сам класс

# имеют возможность менять состояние класса, что в свою очередь
# отражается на всех экземплярах данного класса

# менять состояние конкретного объекта, как это делают методы экземпляра, они не могут
# так как имеют доступ лишь к классу

# cls передает сам класс

# class Cat:
#     __counter_kat = 0                       # приватная переменная класса
#     def __init__(self, breed =None, name =None):
#         self.breed = breed
#         self.name = name                     # атрибут экземпляра
#         Cat.__set_counter_kat()                # вызываем сеттор счетчика
#
#
#     @classmethod                             # любой интерфейс к переменной класса
#     def get_counter_kat(cls):
#         return cls.__counter_kat
#
#     @classmethod                             # любой интерфейс к переменной класса
#     def __set_counter_kat(cls):              # для доступа внутри экземпляра класса
#         cls.__counter_kat += 1
#
#
# print(Cat.get_counter_kat())  # 0  # обратились через класс к методу класса
# cat1 = Cat()
# cat2 = Cat()
# print(Cat.get_counter_kat())  # 2  # обратились через класс к методу класса
# print(cat1.get_counter_kat()) # 2  # обратились через ЭКЗЕМПЛЯР к методу класса




