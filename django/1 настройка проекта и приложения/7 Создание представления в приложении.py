# для работы одной динамической (она же связана с базой данных) веб-страницы
# требуется четыре отдельных файла, соответствующих этому шаблону MVT:
#
# models.py
#
# views.py
#
# template.html (HTML файл шаблона)
#
# urls.py


# технически существует три способа написания представления в Django:
# - представления на основе функций (FBVs)
# - представления на основе классов (CBVs)
# - общие представления на основе классов (GCBVs)

# 1 обновления файла views.py в приложении
# 2 настроить URL-адреса в приложении
# 3 обновление файла проекта /urls.py


# В данном примере используется статическая страница!!!! для простоты
#
# для создания статической веб-страницы (не связанной с базой данных) мы
# можем жестко передать данные в представлении, так что модель не нужна.

# создание первого представления

# 1 обновления файла views.py в нашем приложении
# приложение/views.py:
#
# from django.http import HttpResponse
#
# def homepageview(request):
#     return HttpResponse('Hello, World!')
#
# мы говорим, что всякий раз, когда вызывается функция представления homepageview,
# возвращаем текст Hello, World!.
#
# мы импортировали встроенный метод HttpResponse, чтобы мы могли вернуть пользователю объект ответа.
#
# Мы создали функцию homepageview, которая принимает объект запроса (request)
# и возвращает ответ со строкой Hello, World!.


# 2  настроить URL-адреса
# Создаем новый файл urls.py в приложении
# добавляем код в файл
#
# from django.urls import path                          # импортируем функцию path из Django для созданиянового маршрута
# from .views import homepageview                       # импортируем наши представления
# urlpatterns = [path('', homepageview, name='home'), ]
#
# добавленный маршрут состоит из трех частей:
#  - Шаблон URL адреса для корневой директории сайта ''.
#  - Используемая функция-представление homepageview.
#  - Имя маршрута home, это необязательный именованный параметр name функции path.
#
# если пользователь запрашивает домашнюю страницу(корневую директорию сайта /),
# Django должен использовать представление под названием homepageview


# 3 обновление файла проект/urls.py.
#
# from django.contrib import admin
# from django.urls import path, include            # new
#
# urlpatterns = [
#     path('admin/', admin.site.urls),
#     path('', include('blog.urls')),              # new
# ]
#
# Новый маршрут, определённый с помощью функции include, ссылается на маршруты URL-адресов,
# определенные в приложении blog, чтобы они были включены в рамки пути корневой директории сайта /.
# Указанные шаблоны вставляются в рамки именного пространства(namespace) blog
#
# Теперь каждый раз, когда пользователь заходит на домашнюю страницу, он будет сначала перенаправляться
# в приложение blog, а затем в представление homepageview, заданное в файле blog/urls.py