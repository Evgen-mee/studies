# преимущество состоит в том, что она позволяет задать адреса URL с помощью регулярных выражений

# В самом шаблоне адреса можно использовать различные элементы синтаксиса регулярных выражений.
# В частности, выражение ^about указывает, что адрес должен начинаться с about.
# Однако он необязательно в точности должен соответствовать строке about, как это было в случае с функцией path
#
# мы можем обратиться по любому адресу, главное чтобы он начинался с about,
# и тогда подобный запрос будет обрабатываться функцией views.about.
# Причем даже запрос http://127.0.0.1:8000/about/hello отправит запрос в представление views.about.

# принимает четыре параметра
# re_path(route, view, kwargs=None, name=None)
#
#  route:
# представляет шаблон адреса URL, которому должен соответствовать запрос
# обязательный параметр
#
#  view:
# представление, которое обрабатывает запрос
# обязательный параметр
#
#  kwargs:
# дополнительные аргументы, которые передаются в функцию-представление
# НЕ обязательный параметр
#
#  name:
# название маршрута
# НЕ обязательный параметр

# from django.urls import path, re_path
# from blog import views
#
# urlpatterns = [
#     path('', views.index),                 # образуется с помощью функции path и указывает на корень веб-приложения
#     re_path(r'^about/', views.about),      # образуется с помощью функции re_path()
#     re_path(r'^contact/', views.contact),  # образуется с помощью функции re_path()
# ]

# URL запрос который приходит к нам на сервер http://127.0.0.1:8000/user/Tom/38/
# содержимое запроса можем передать в представление(функцию) как параметры Tom/38/

# Для того что бы передать информацию из URL запроса в параметры функции
# 1) нужна функция в файле представления приложения принимающая определенное колличество параметров
# 2) в файле urls приложения в функции path() необходимо передать данный параметр



# path()
# Определяем функцию в файле представления приложения
#
# def user(request, name='Undefined', age=0):                 # принимает три параметра, задали значение по умолчанию
#     return HttpResponse(f'<h2>Имя: {name} Возраст: {age}</h2>')

# в файле urls приложения
# urlpatterns = [
#     path('', views.index),
#     path('user/<str:name>/<int:age>/', views.user),  # используя спецификаторы передали параметры в функцию
# ]

# re_patch()
# Определяем функцию в файле представления приложения
#
# def user(request, name='Undefined', age=0):
#     return HttpResponse(f'<h2>Имя: {name}, Возраст: {age}</h2>')

# в файле urls приложения
# urlpatterns = [
#     path('', views.index),
#         re_path(r'^user/(?P<name>\D+)/(?P<age>\d+)/', views.user),
#         re_path(r'^user/(?P<name>\D+)/', views.user),    # определили путь для запросов в которых не передаются все параметры для представления
#         re_path(r'^user/', views.user),                  # определили путь для запросов в которых не передаются все параметры для представления
# ]
