В Python мы не присваиваем переменные, а привязываем имена к объектам.
num = 101 # создаем переменную

1) создаётся специальный объект PyObject
2) заполняется его поле Type, которое указывает на тип
3) заполняется его поле Value, которое указывает на значение
4) создаётся имя num
5) имя num начинает указывать на созданный PyObject
6) счётчик ссылок (поле Reference Count) объекта PyObject увеличивается на 11


a = 17
b = a
c = b
1) создаётся специальный объект PyObject
2) заполняется его поле Type, которое указывает на тип
3) заполняется его поле Value, которое указывает на значение
4) создаётся имя a
5) имя a начинает указывать на созданный PyObject
6) счётчик ссылок (поле Reference Count) объекта PyObject увеличивается на 11
7) создаётся имя b
8) имя b начинает указывать на созданный PyObject
9) счётчик ссылок (поле Reference Count) объекта PyObject увеличивается на 11
10) создаётся имя c
11) имя c начинает указывать на созданный PyObject
12) счётчик ссылок (поле Reference Count) объекта PyObject увеличивается на 11

С помощью оператора is можно сравнивать значение объектов на идентичность.
Под идентичностью объектов подразумевается равенство их идентификаторов.


Интернирование – это процесс хранения в памяти только одной копии объекта.
Это означает, что, когда мы создаем две строки (два целых числа) с одинаковыми значениями,
то вместо выделения памяти для них обоих, только одна строка (целое число) фактически фиксируется в памяти.
Другая же просто указывает на то же самое место в памяти.
Для реализации данной оптимизации Python использует специальную таблицу, которая называется пул интернирования.
Эта таблица содержит одну уникальную ссылку на каждый объект строкового типа, либо целого числа.

Поскольку небольшие целые числа встречаются достаточно часто в нашем коде,
Python интернирует их в диапазоне от −5−5 до 256256.

В Python 3.7 интернируются строки, содержащие не более 2020 символов и состоящие только из ASCII-букв,
цифр и знаков подчёркивания. Данный набор символов был выбран потому, что он часто используется в нашем коде.

Функция sys.intern()
intern() из модуля sys позволяет интернировать любую строку,
например, содержащую 50005000 символов или состоящую из букв русского алфавита.
Данная функция принимает в качестве аргумента строку, добавляет ее в пул интернирования
(если ее там нет) и возвращает интернированную строку.



