# Импорт стандартных модулей. Команды import и from
# модуль = библиотека
# print(locals()) вернет все локальные переменные
# a = math.ceil() записали функцию в переменную

# import math as x библиотеки math присвоили псевдоним x с помощью as

# импортировать всю библиотеку или несколько
# import math или from math import *  добавили звездочку в конец

# from math import ceil,pi что бы импортировать часть функций из библиотеки
# можем просто вызывать ceil() вместо math.ceil()
# так же можно использовать псевдоним
# # from math import ceil as foo1, pi as foo2



# Импорт собственных модулей
# создание и подключение собственных модулей

# В начале файла пишем
# NAME  = "название библиотеки"

# при подключении файла подтянуться все библиотеки что использовал файл
# в подключаемом файле используем импорт функций from math import ceil,pi

# в основном фале можно будет обращаться  "название библиотеки".ceil()
# при подключении import math получим иерархию вызовов "название библиотеки".math.ceil()
# в основном файле так же можно подключить math конфликта не будет

# если библиотека находится в подкаталоге то нужно указать путь
# import папка.название библиотеки
# ИЛИ
# подключить библиотеку import sys
# sys.path.append(r"D:\studies\Programming\Pyton\PY project\school\Step Good, good Python.py")
# тогда можно просто import название библиотеки

# что бы выполнить вызовы в библиотеки и они не исполнялись в основном файле
# нужно в библиотеки прописать
# if __name__ =="__main__":
# действие

# pragma once работает по умолчанию

#  from направляет в дерикторию исполнителя from panda import *



# Установка сторонних модулей. Пакетная установка
# увидеть подключенные пакеты ввести в консоль pip list
# установить нужный пакет ввести в консоль pip install нужный пакет
# установить нужный пакет ОПРЕДЕЛЕННОЙ ВЕРСИИ ввести в консоль pip install нужный пакет == 1.1.1 версия


# Пакеты (package) в Python
# пакеты могут быть вложенны
# это специальным образом организованный подкаталог с набором модулей
# как правило решающий схожие задачи

# создаеются во вкладке new pycharm

# импортировать пакет import название пакета в проект

# файл __init__py содержит в себе все остальные библиотеки из каталога
# в файл __init__py должны быть подключены все остальные пакеты
# в файле __init__py подключаем следующим образом import название папки.название файла

# что бы избежать иеррархии вызовов название библиотеки.названиее файла библиотеки.функция
# в файл __init__py from название папки.название файла import функция
# или что бы при изменении имени файла пакета не менять название делаем так
# from .название файла import функция
# или
# from . import файл библиотеки №1, файл библиотеки №2
# или самый лучший вариант
# from . import * будет автоматически подтягивать все что есть

# в файле библиотеки указываем что будет импортироваться если используем from . import *
# __all__ ["имя функции 1", "имя функции 2"]