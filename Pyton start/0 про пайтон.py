# Преимущества Python
# Это интерпретируемый язык программирования:
# он не требует отдельного этапа компиляции;
# программа на языке Python запускается прямо из исходного кода;
# Это высокоуровневый язык программирования;
# Это платформонезависимый язык:
# программы на Python можно создавать на разных операционных системах (Linux, Windows, OS X);
# программы на Python можно запускать на разных операционных системах (Linux, Windows, OS X);
# Это open source проект;
# Это простой язык;
# Это встраиваемый скриптовый язык;
# Это динамический язык, что упрощает написание несложных программ;
# Для Python существует огромная библиотека классов на любой вкус.

# Недостатки Python
# Низкая скорость выполнения по сравнению с такими языками, как C и C++;
# Динамическая типизация языка — минус при написании сложных программ.

# Задачи, решаемые с помощью Python
# Python подходит для решения широкого спектра задач. Разобьем их на категории:
#
# Системное программирование. Встроенные в  Python интерфейсы доступа к службам операционных систем делают
# его идеальным инструментом для создания переносимых программ и утилит системного администрирования;
#
# Графические приложения. Простота Python и быстрота разработки делают его отличным средством создания графического интерфейса.
# В состав Python входит стандартный объектно-ориентированный интерфейс к GUI API;
#
# Веб-приложения. С помощью дополнительных фреймворков на
# языке Python (Django, Flask, Pyramid) можно создавать полнофункциональные сайты;
#
# Веб-сценарии. Python поставляется вместе со стандартными интернет-модулями,
# которые позволяют программам выполнять разнообразные сетевые операции как в режиме клиента, так и в режиме сервера;
#
# Интеграция компонентов. Возможность Python расширяться и встраиваться в системы на языке C++ делает его удобным для
# описания поведения других систем и компонентов;
#
# Приложения баз данных. В Python имеются интерфейсы доступа ко всем основным реляционным базам
# данных: Sybase, Oracle, Informix, ODBC, MySQL, PostgreSQL, SQLite и многим другим. С их помощью можно создавать приложения баз данных.

# Философия Python
# Красивое лучше, чем уродливое;
# Явное лучше, чем неявное;
# Простое лучше, чем сложное;
# Сложное лучше, чем запутанное;
# Плоское лучше, чем вложенное;
# Разреженное лучше, чем плотное;
# Читаемость имеет значение;
# Особые случаи не настолько особые, чтобы нарушать правила;
# При этом практичность важнее безупречности;
# Ошибки никогда не должны замалчиваться;
# Если не замалчиваются явно;
# Встретив двусмысленность, отбрось искушение угадать;
# Должен существовать один — и, желательно, только один — очевидный способ сделать это;
# Хотя он поначалу может быть и не очевиден, если вы не голландец;
# Сейчас лучше, чем никогда;
# Хотя никогда зачастую лучше, чем прямо сейчас;
# Если реализацию сложно объяснить — идея плоха;
# Если реализацию легко объяснить — идея, возможно, хороша;
# Пространства имён — отличная вещь! Давайте будем делать их больше!


