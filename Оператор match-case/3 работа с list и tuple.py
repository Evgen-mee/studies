# Можем комбинировать условия обработки (_, autor, title, price, *_) | (autor, title, price)
# НО КОЛЛИЧЕСТВО И ИМЕНА ПЕРЕМЕННЫХ ДОЛЖНЫ СОВПАДАТЬ кроме _ *_

# cmd = (1,"Балакирев С.М.", "Python", 2000.78, 2022)
#
# match cmd:
#     # при данной записи происходит распаковка
#     # если коллекция короче или длинее то данный блок не отработает!!!!
#     case autor, title, price:
#         print(f'Книга: {autor}, {title}, {price}')
#
#     # Данная запись позволит распаковать коллекцию БОЛЬШЕЙ длинны НО не меньшей
#     # скобки для визуального разделения распаковки и условия
#     case (autor, title, price, *_) if len(cmd) < 8:
#         print(f'Книга: {autor}, {title}, {price}')
#
#     # Можем проверить каждое распакованное значение на тип
#     case (str(autor), str(title) ,float() | int() as price, *_) if len(cmd) < 8:
#         print(f'Книга: {autor}, {title}, {price}')
#
#     # Если нам нужно работатать с значениями не стоящими на первом месте
#     # то мы можем их распаковать в _
#     # в данном примере мы игнорируем первое значение
#     # берем три последующих
#     # и игнорируем все остальные значения
#     case _, autor, title, price, *_:
#         print(f'Книга: {autor}, {title}, {price}')
#
#     # можем комбинировать условия распаковки
#     case (_, autor, title, price, *_) | (autor, title, price):
#         print(f'Книга: {autor}, {title}, {price}')
#
#     case _:
#         print('непонятный тип данных')