# Факт неявного наследования каждого класса от класса object позволяет сделать вывод,
# что с помощью наследования мы можем выстраивать иерархии классов, то есть, например,
# класс C может быть наследником класса B,
# который, в свою очередь, является наследником класса A:

# class A:
#     def method_A(self):
#         print('Метод класса A')
#
# class B(A):
#     def method_B(self):
#         print('Метод класса B')
#
# class C(B):
#     pass
#
#
# c = C()
#
# c.method_A()  # Метод класса A
# c.method_B()  # Метод класса B