# По умолчанию экземпляры класса данных можно сравнивать между собой лишь на равенство.
#
# Для того чтобы экземпляры класса данных можно было сравнивать на больше/меньше,
# при его определении необходимо передать декоратору @dataclass в качестве параметра order значение True.


# Сравнение подразумевает последовательное сравнение значений всех атрибутов,
# то есть сперва сравниваются значения атрибутов
# name, если они равны — сравниваются значения атрибутов surname,
# и так далее до первого несовпадения.
# В примере  person2 больше person1, так как person2.name больше person1.name.

# располагая атрибуты в теле класса в определенном порядке,
# мы можем контролировать их приоритет при сравнении
# from dataclasses import dataclass
#
# @dataclass(order=True)
# class Person:
#     name: str
#     surname: str
#     age: int
#
#
# person1 = Person('Гвидо', 'ван Россум', 67)
# person2 = Person('Илон', 'Маск', 51)
#
# print(person1 > person2) # False


# использовать функцию field(), чтобы исключить атрибуты, которые не хотим учитывать при сравнении
# from dataclasses import dataclass, field
#
# @dataclass(order=True)
# class Person:
#     name: str = field(compare=False)                      # атрибут не учитывается при сравнении
#     surname: str = field(compare=False)                   # атрибут не учитывается при сравнении
#     age: int                                              # учитываются только значения атрибутов age
#
#
# person1 = Person('Гвидо', 'ван Россум', 67)
# person2 = Person('Илон', 'Маск', 51)
#
# print(person1 > person2)  # True