# больше не нужно определять три метода с разными именами get_name, set_name и del_name
# вместо этого мы сразу определяем три метода с общим именем name,
# которое и является именем создаваемого свойства.

# применение функции property() в качестве декоратора
# — это последовательное создание новых свойств и переприсваивание их одной и той же переменной

# При создании свойства с помощью синтаксиса декораторов методы, реализующие для него логику
# геттера, сеттера и делитера, должны иметь одно и то же имя — имя создаваемого свойства.

# Pycharm, используйте команды props/propsd для быстрого создания свойств

# class Cat:
#     def __init__(self, name):
#         self._name = name                               # имя кошки
#
#     @property
#     def name(self):                                     # геттер свойства name
#         return self._name
#
#     @name.setter
#     def name(self, name):                               # сеттер свойства name
#         if isinstance(name, str) and name.isalpha():
#             self._name = name
#         else:
#             raise ValueError('Некорректное имя')
#
#     @name.deleter
#     def name(self):                                     # делитер свойства name
#         del self._name



