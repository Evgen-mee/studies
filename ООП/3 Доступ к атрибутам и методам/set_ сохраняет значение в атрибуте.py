# сохраняет значение в атрибуте либо изменяет значение атрибута, называется сеттером
# Сеттеры могут управлять тем, как атрибуты объекта изменяются
# Когда программный код, находящийся вне класса, должен изменить в объекте значение атрибута, он, как правило,
# вызывает сеттер и передает новое значение в качестве аргумента

# Если это необходимо, то метод, прежде чем он присвоит значение атрибуту,
# может выполнить проверку этого значения.


# class Cat:
#     def __init__(self, name):
#         self._name = name
#
#     def get_name(self):
#         return self._name
#
#     def set_name(self, name):                           # сеттер, используется для изменения имени
#         if isinstance(name, str) and name.isalpha():    # проверка имени перед заменой
#             self._name = name
#         else:
#             raise ValueError('Некорректное имя')


# cat = Cat('Кемаль')
# print(cat.get_name())   # Кемаль

# cat.set_name('Роджер')  # Вызвали сеттор для изменения имени
# print(cat.get_name())   # Роджер