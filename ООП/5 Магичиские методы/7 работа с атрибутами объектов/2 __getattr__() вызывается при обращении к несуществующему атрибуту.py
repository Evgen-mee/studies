# __getattr__() — вызывается при обращении к несуществующему атрибуту

# вызывается только в двух случаях:
#  - если в теле метода __getattribute__() было возбуждено исключение AttributeError
#  - если метод __getattr__() был явно вызван в теле метода __getattribute__()


# возврат значения по умолчанию при обращении к несуществующему атрибуту,
# вместо привычного возбуждения исключения AttributeError
#
# class Cat:
#  def __init__(self, name):
#   self.name = name
#
#  def __getattr__(self, attr):               # переопределили поведение при обращение к несуществующему атрибуту
#   print(f'Возвращаю значение по умолчанию')
#   return None                               # вернет None вместо ошибки
#
#
# cat = Cat('Кемаль')
#
# print(cat.name) # Кемаль  # обращение к существующему атрибуту
# print(cat.age)  # None    # обращение к несуществующему атрибуту
# print(cat.breed)# None    # обращение к несуществующему атрибуту


# можно имитировать наличие различных атрибутов,
# которыми объект на самом деле не обладает

# class Cat:
#  def __init__(self, name, breed):
#   self.name = name
#   self.breed = breed  # порода кошки
#
#  def __getattr__(self, attr):
#   if attr == 'info':
#    return f'Имя: {self.name}\nПорода: {self.breed}'
#   raise AttributeError
#
#
# cat = Cat('Кемаль', 'Британский')
#
# print(cat.info)  # обращение к несуществующему атрибуту
# выводит:
# Имя: Кемаль
# Порода: Британский