# За приведение экземпляра класса к логическому типу и его поведение при передаче
# в функцию bool() отвечает магический метод __bool__()

# Реализовав данный метод в классе, мы можем определить, какие экземпляры считаем истинными, а какие ложными.

# Если в классе не реализован метод __bool__(), то происходит попытка вызова метода __len__(),
# и если он реализован и возвращает ненулевое значение, то объект считается истинным,
# в противном случае объект считается ложным

# Если в классе отсутствуют оба магических метода __bool__() и __len__(),
# то все экземпляры этого класса считаются истинными

# Вызов магического метода __bool__() (в определенных случаях __len__())
# происходит во время любых логических приведений.
# Например, при проверке на истинность с помощью условного оператора if

# Можем использовать all() и any() если определили bool или len


# class Angle:
#     def __init__(self, value):
#         self.value = value
#
#     def __bool__(self):
#         return self.value != 0
#
#
# print(bool(Angle(-110)))  # True
# print(bool(Angle(0)))     # False
# print(bool(Angle(0.0)))   # False
# print(bool(Angle(120.1))) # True

# используем if
# angle = Angle(100)
# if angle:
#     print('I am True') # I am True
# else:
#     print('I am False')

# используем all() any()
# angles = [Angle(100), Angle(110), Angle(-50), Angle(0)]
# print(all(angles))   # False
# print(any(angles))   # True



