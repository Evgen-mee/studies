# Все основные операции над множествами выполнятся двумя способами:
# метода
# соответствующего оператора
# Различие в том, что метод может принимать в качестве аргумента не только множество (тип данных set),
# но и любой итерируемый объект (список, строку, кортеж).


# методы (union(), intersection(), difference()) и операторы (|, &, -, ^)
# позволяют совершать операции над несколькими множествами сразу.


# Оператор ^ симметрической разности позволяет использовать несколько множеств,
# а метод symmetric_difference() – нет.


# Объединение множеств это множество, состоящее из элементов, принадлежащих хотя бы одному из объединяемых множеств
# обьеденить два множества
# c = a | b или если сохраняем в a |=b
# или
# метод union() на выходе множество, состоящее из элементов, принадлежащих хотя бы одному из объединяемых множеств
# возвращает новое множество в которое входят все элементы множеств
# myset1 = {1, 2, 3, 4, 5}
# myset2 = {3, 4, 6, 7, 8}
# myset3 = myset1.union(myset2) = {1, 2, 3, 4, 5, 6, 7, 8}


# Пересечение множеств это множество, состоящее из элементов,
# принадлежащих одновременно каждому из пересекающихся множеств.
# получить пересечение множеств
# a = c & b на выходе получим а = значениям которые есть в c и b
# или
# метод intersection()
# a = c.intersection(b)
# myset1 = {1, 2, 3, 4, 5}
# myset2 = {3, 4, 6, 7, 8}
# myset3 = myset1.intersection(myset2) = {3, 4}

# Метод intersection_update() -  изменяет исходное множество по пересечению.
# или &=
# myset1 = {1, 2, 3, 4, 5}
# myset2 = {3, 4, 6, 7, 8}
# myset1.intersection_update(myset2)      # изменяем множество myset1
# myset1 = {3, 4}


# Разность множеств это множество, в которое входят все элементы первого множества,
# не входящие во второе множество.
# вычетание множеств (разность)
# c = a-b в c будут значения из a которых нет в b
# c = a{1,2,4} - b{4,5,6,7,8,}  итого c = {1,2}
# c = b{4,5,6,7,8,} - a{1,2,4}   итого c = {5,6,7,8,}
# сохранить сразу в b   b-=a
# или
# метод difference()
# myset1 = {1, 2, 3, 4, 5}
# myset2 = {3, 4, 6, 7, 8}
# myset3 = myset1.difference(myset2) = {1, 2, 5}

# Метод difference_update() - изменяет исходное множество по разности.
# или -=
# myset1 = {1, 2, 3, 4, 5}
# myset2 = {3, 4, 6, 7, 8}
# myset1.difference_update(myset2)      # изменяем множество myset1
# myset1 = {1, 2, 5}


# Симметрическая разность множеств это множество, включающее все элементы исходных множеств,
# не принадлежащие одновременно обоим исходным множествам
# Семитричная разность
# на выходе получаем множество НЕ совпадающих элементов
# c = b{4,5,6,7,8,} ^  a{1,2,4} итого с = {1,2,5,6,7,8}
# или
# метод symmetric_difference()u
# myset1 = {1, 2, 3, 4, 5}
# myset2 = {3, 4, 6, 7, 8}
# myset3 = myset1.symmetric_difference(myset2) = {1, 2, 5, 6, 7, 8}

# Метод symmetric_difference_update() - изменяет исходное множество по симметрической разности.
# или ^=
# myset1 = {1, 2, 3, 4, 5}
# myset2 = {3, 4, 6, 7, 8}
# myset1.symmetric_difference_update(myset2)      # изменяем множество myset1
# myset1 = {1, 2, 5, 6, 7, 8}



