#Вложенные функции могут захватывать и переносить с собой часть состояния родительской функции

# замыкание — это особый вид функции.
# Она определена в теле другой функции и создаётся каждый раз во время её выполнения.
# Синтаксически это выглядит как функция, находящаяся целиком в теле другой функции.
# При этом вложенная функция содержит ссылки на локальные переменные внешней функции.
# Каждый раз при выполнении внешней функции происходит создание нового экземпляра внутренней функции,
# с новыми ссылками на переменные внешней функции.


# def greeting_creator(greeting_word):         # родительская функция
#     def greet(name):                         # дочерняя функция
#         return f'{greeting_word}, {name}'    # Может обращаться к greeting_word родительскому аргументу
#
#     return greet
#
#
# say_hi = greeting_creator('Hi')              # записали родительскую функцию в переменную с аргументом
# say_hello = greeting_creator('Hello')        # записали родительскую функцию в переменную с аргументом
#
# print(say_hi('Timur'))      # Hi, Timur        # передали в дочернию аргумент
# print(say_hello('Soslan'))  # Hello, Soslan    # передали в дочернию аргумент


# Вложенные функции могут обращаться ко всем локальным переменным родительской функции,
# независимо от того, были они определены во внешней функции или пришли из аргументов внешней функции.
#
# def f(x):
#     z = 2
#     def g(y):
#         return z*x + y    # обращение к нелокальной переменной z и параметрической переменной x
#     return g
#
# h = f(5)
# print(h(1))              # 11

