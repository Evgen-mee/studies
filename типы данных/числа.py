#Decimal

# Не стоит сравнивать float числа с помощью оператора ==.
#
# Не рекомендуется создавать Decimal числа из float чисел.
# В Decimal попадет уже неправильно округленное число.
# Создавать Decimal числа нужно из целых чисел, либо из строк!
#
# Тип данных Decimal неизменяемый
# Операции над ним приводят к созданию новых объектов, при этом старые не меняются.
# Decimal – это класс из стандартного модуля decimal.
# Он представляет собой число с плавающей точкой, как и float.
# Однако, Decimal имеет ряд существенных отличий от float.
#
# Тип Decimal создан, чтобы операции над вещественными числами в компьютере выполнялись как в математике,
# Тип данных Decimal реализован программно, поэтому он в разы медленнее типа данных float, реализованного аппаратно.
# Сам тип данных Decimal написан на языке С
#
#
# Создать Decimal число можно из обычного целого числа (int),
# из числа с плавающей точкой (float)
# или из строки (str).
# d1 = Decimal(1) == 1
# d2 = Decimal(567) == 567
# d3 = Decimal(-93) == -93
# d4 = Decimal('12345') == 12345
# d5 = Decimal('52.198') == 52.198
#
# Чтобы не писать каждый раз название типа, можно использовать следующий код:
# from decimal import Decimal as D
#
# num1 = D('1.5') + D('3.2')
# num2 = D('1.4') * D('2.58')
#
# print(num1)
# print(num2)


#fractions
# from fractions import Fraction
#
#
# Не рекомендуется создавать Fraction числа из float
# в разы медленнее встроенных числовых типов данных int и float
# Для работы с рациональными числами в Python используется тип данных Fraction
# Тип данных Fraction неизменяемый
#
# Создать Fraction число можно несколькими способами:
# 3 - числитель, 4 - знаменатель
# um1 = Fraction(3, 4) == 3/4
# num2 = Fraction('0.55') == 11/20
# num3 = Fraction('1/9') == 1/9
#
#
# from fractions import Fraction
#
# num = Fraction('5/16')
#
# print('Числитель дроби равен:', num.numerator) == Числитель дроби равен: 5
# print('Знаменатель дроби равен:', num.denominator) == Знаменатель дроби равен: 16
#
#
# from fractions import Fraction
#
# num = Fraction('-5/16')
#
# print(num.as_integer_ratio()) == (-5, 16)


# complex

 










