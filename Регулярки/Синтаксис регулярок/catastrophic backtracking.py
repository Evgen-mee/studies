import re

# Запустим выражение на строке из 20 символов a:
# re.findall(r"(a+)+b", "a" * 20)
# Выполнилось за 0.07218690006993711

# Запустим выражение на строке из 30 символов a:
# re.findall(r"(a+)+b", "a" * 30)
# Выполнилось за 75.4667053000303

# Прирост более чем в тысячу раз!!!

# Если к группе применён квантификатор и внутри этой группы используется ещё один квантификатор
# или |, то регулярное выражение может быть неконтролируемым.
# Примеры таких выражений:
# (?:a+)+
# ([a-zA-Z_]+)*
# (?:a|aa)+
# (a|a?)+
#
# способы решить эту проблему:
# 1) переписать регулярное выражение, если это возможно (сократить количество квантификаторов и условий или)
# 2) Перед использованием выражения проверять входные данные (например, не принимать слишком большой текст)
# 3) Использовать специальные средства из модуля re
# 4) Контролировать использование регулярного выражения (например, останавливать поиск, если он идёт слишком долго)

