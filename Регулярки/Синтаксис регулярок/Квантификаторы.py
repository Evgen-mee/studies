# Квантификатор - конструкция, которая позволяет указывать количество повторений.

# В каждом квантификаторе учитываются и начало, и конец отрезка.
# Каждый квантификатор по умолчанию - жадный.
# Жадные квантификаторы пытаются захватить как можно больше символов.

# Квантификатор	Использование
#  - {n}	Ровно n повторений
#  - {m,n}	От m до n повторений.
#  - {m,}	Не менее m повторений
#  - {,n}	Не более n повторений
#  - ? Ноль или одно повторение То же, что и {0,1}
#  - * Ноль или более повторений То же, что и {0,}
#  - + Одно или более повторений То же, что и {1,}


# r'\d{3}' # ищет три подряд идущие цифры в строке
# r'a?b' # ищет последовательности, где 'a' может быть ноль или один раз, а затем следует символ 'b'
# r'[^\d\s]+' # ищет последовательности символов, которые не являются цифрами и не являются пробелами
# r'[A-Za-z]+\d*'# ищет последовательности, начинающиеся с буквенной части, за которой может следовать числовая часть
# r'\d{3,5}-[A-Z]{2,4}' # ищет последовательности от трех до пяти цифр, за которыми следует дефис,
# а затем последовательность от двух до четырех заглавных букв


# Жадные квантификаторы:
# пытаются захватить максимальное количество символов.
# {m,n}
# {,n}
# {m,}
# *
# +
# ?
#
# Ленивые квантификаторы
# Если после квантификатора добавить символ ?,
# он становится ленивым.
# Тогда он будет захватывать минимальное количество символов.
# {m,n}? - от m до n
# {,n}? - до n
# {m,}? - от m
# *? - от 0
# +? - от 1
# ?? - от 0 до 1

# Каждый из этих квантификаторов будет пытаться захватить как можно меньше символов.

# жадность меняет работу всех квантификаторов,
# кроме квантификатора {n}.
# Но это и логично, так как в любом случае он будет искать нужную последовательность n раз,
# независимо от его жадности. Квантификатор {n} будет равносилен квантификатору {n}?

# Притяжательные квантификаторы
# Если после жадного квантификатора поставить +, то он станет притяжательным:
# {m,n}+
# {,n}+
# {m,}+
# *+
# ++
# ?+
# Притяжательные квантификаторы, как и жадные, пытаются найти максимально возможное количество вхождений.
# Но, в отличие от жадных квантификаторов, они не разрешают back-tracking,
# когда регулярное выражение не может найти совпадение.
# Это значит, что движок не будет проходить огромное количество путей и закончит свою работу раньше,
# если совпадение не будет найдено.
# Как и в случае с ленивыми квантификаторами, смысла делать квантификатор {n} притяжательным нет.