# в строках Python по умолчанию работает экранирование
# # Вместо \n мы получим переход на новую строку
# print("Переносим\nстроку")
# # Вместо \\' получаем вывод \'
# # Первый \ экранирует второй \, и он исчезает из вывода
# print("\\'")
#
# Чтобы сказать интерпретатору, что экранировать последовательность не нужно,
# достаточно поставить перед ней обратный слеш:
# # Теперь тут выводится строка: Переносим\nстроку
# print("Переносим\\nстроку")
#
# # Вместо вывода, который мы ожидали, снова получаем такой: \'
# print("\\\'")
#
# # Для того, чтобы исправить эту ситуацию, добавим ещё один обратный слеш!
# print("\\\\'")
# # И только сейчас мы получим вывод: \\'
# одного слеша бывает недостаточно, и приходится добавлять больше
#
#
# Экранирование в регулярных выражениях
# Если нам нужно использовать какой-то спецсимвол как простой текст, то достаточно поставить перед ним \,
# как и в обычных строках Python.
# # Отключаем экранирование всей строки префиксом r:
# print(r"Переносим\nстроку")
# print(r"\\'")
#
# # Отключаем экранирование каждой последовательности с помощью слешей:
# print("Переносим\\nстроку")
# print("\\\\'")

