# - sub()
# заменяет найденные вхождения на заданные символы и возвращает исправленную строку.
# re.sub(pattern, replace, string, count=0, flags=0)
#
# pattern - регулярное выражение
# replace - то, на что нужно заменить найденное вхождение
# string - строка, к которой нужно применить регулярное выражение
# count - необязательный аргумент, максимальное число вхождений, подлежащих замене.
# Если этот параметр опущен или равен нулю, то произойдет замена всех вхождений.
# flags - флаги, пройдём позже
#
# Возвращаемое значение:
# Если совпадения есть - изменённая строка
# string, если совпадений нет
#
# import re
# pattern = r'[a-z]{3}'
# replace = '111'
# string = 'abc 123 def 456 fed 321 cba'
# result = re.sub(pattern, replace, string) #Заменяем все трёхбуквенные последовательности на 111
# print(result) # 111 123 111 456 111 321 111
#
# import re
# pattern = r'[a-z]{3}'
# replace = '111'
# string = 'abc 123 def 456 fed 321 cba'
# result = re.sub(pattern, replace, string, 2) #Заменяем первые две трёхбуквенные последовательности на 111
# print(result) # 111 123 111 456 fed 321 cba
